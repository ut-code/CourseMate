//schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  guid        String        @unique
  name        String        @default("名無し")
  email       String        @default("")
  password    String        @default("")
  pictureUrl  String        @default("")
  enrollments Enrollement[]

  //自分がマッチリクエストしている相手
  requestingUsers Relationship[] @relation("requesting")

  //自分をマッチリクエストしている相手
  requestedUsers Relationship[] @relation("requested")
}

model Course {
  id          Int           @id @default(autoincrement())
  name        String
  enrollments Enrollement[]
}

model Enrollement {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
}

model Relationship {
  id               Int            @id @default(autoincrement())
  status           MatchingStatus
  requestingUser   User           @relation("requesting", fields: [requestingUserId], references: [id])
  requestingUserId Int //マッチリクエストを送っている人
  requestedUser    User           @relation("requested", fields: [requestedUserId], references: [id])
  requestedUserId  Int //マッチリクエストを送られている人

  @@unique([requestingUserId, requestedUserId])
}

enum MatchingStatus {
  PENDING
  MATCHED
  REJECTED
}
