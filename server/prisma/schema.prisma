//schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  guid        String @unique
  name        String @default("")
  pictureUrl  String @default("")
  grade       String @default("")
  gender      String @default("")
  hobby       String @default("")
  intro_short String @default("")
  intro_long  String @default("")

  enrollments    Enrollement[] // TODO
  sendingUsers   Relationship[] @relation("sending") // 自分がマッチリクエストを送ったユーザー
  receivingUsers Relationship[] @relation("receiving") // 自分にマッチリクエストを送ったユーザー
}

model Course {
  id          Int           @id @default(autoincrement())
  name        String
  enrollments Enrollement[]
}

model Enrollement {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
}

model Relationship {
  id              Int            @id @default(autoincrement())
  status          MatchingStatus
  sendingUser     User           @relation("sending", fields: [sendingUserId], references: [id], onDelete: Cascade)
  sendingUserId   Int
  receivingUser   User           @relation("receiving", fields: [receivingUserId], references: [id], onDelete: Cascade)
  receivingUserId Int

  messages Message[]

  @@unique([sendingUserId, receivingUserId])
}

enum MatchingStatus {
  PENDING
  MATCHED
  REJECTED
}

// TODO: lazy load MessageLog s.t. it doesn't need to be loaded on Overview query.
// https://www.prisma.io/docs/orm/prisma-client/queries/select-fields
model SharedRoom {
  id        Int       @id @default(autoincrement())
  thumbnail String // URL to thumbnail picture
  name      String
  members   Int[]
  messages  Message[]
}

model Message {
  id           Int           @id @default(autoincrement())
  creator      Int // refers to UserId
  createdAt    DateTime      @default(now()) // @readonly
  edited       Boolean       @default(false)
  content      String
  relation     Relationship? @relation(fields: [relationId], references: [id], onDelete: Cascade)
  relationId   Int?
  sharedRoom   SharedRoom?   @relation(fields: [sharedRoomId], references: [id], onDelete: Cascade)
  sharedRoomId Int?
}
