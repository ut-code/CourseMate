/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootImport } from './routes/root'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as FriendsImport } from './routes/friends'
import { Route as EditProfileImport } from './routes/editProfile'
import { Route as EditCoursesImport } from './routes/editCourses'
import { Route as ChatImport } from './routes/chat'
import { Route as RegistrationIndexImport } from './routes/registration/index'
import { Route as SettingsSettingsImport } from './routes/settings/settings'
import { Route as SettingsProfileImport } from './routes/settings/profile'
import { Route as SettingsDisclaimerImport } from './routes/settings/disclaimer'
import { Route as SettingsContactImport } from './routes/settings/contact'
import { Route as SettingsAboutUsImport } from './routes/settings/aboutUs'
import { Route as RegistrationFunctionsImport } from './routes/registration/functions'
import { Route as RegistrationDataImport } from './routes/registration/data'
import { Route as RegistrationCommonImport } from './routes/registration/common'
import { Route as RegistrationStepsStep4courseImport } from './routes/registration/steps/step4_course'
import { Route as RegistrationStepsStep3confirmationImport } from './routes/registration/steps/step3_confirmation'
import { Route as RegistrationStepsStep2imgImport } from './routes/registration/steps/step2_img'
import { Route as RegistrationStepsStep1profileImport } from './routes/registration/steps/step1_profile'

// Create/Update Routes

const RootRoute = RootImport.update({
  path: '/root',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const FriendsRoute = FriendsImport.update({
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any)

const EditProfileRoute = EditProfileImport.update({
  path: '/editProfile',
  getParentRoute: () => rootRoute,
} as any)

const EditCoursesRoute = EditCoursesImport.update({
  path: '/editCourses',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationIndexRoute = RegistrationIndexImport.update({
  path: '/registration/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsSettingsRoute = SettingsSettingsImport.update({
  path: '/settings/settings',
  getParentRoute: () => rootRoute,
} as any)

const SettingsProfileRoute = SettingsProfileImport.update({
  path: '/settings/profile',
  getParentRoute: () => rootRoute,
} as any)

const SettingsDisclaimerRoute = SettingsDisclaimerImport.update({
  path: '/settings/disclaimer',
  getParentRoute: () => rootRoute,
} as any)

const SettingsContactRoute = SettingsContactImport.update({
  path: '/settings/contact',
  getParentRoute: () => rootRoute,
} as any)

const SettingsAboutUsRoute = SettingsAboutUsImport.update({
  path: '/settings/aboutUs',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationFunctionsRoute = RegistrationFunctionsImport.update({
  path: '/registration/functions',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationDataRoute = RegistrationDataImport.update({
  path: '/registration/data',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationCommonRoute = RegistrationCommonImport.update({
  path: '/registration/common',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationStepsStep4courseRoute =
  RegistrationStepsStep4courseImport.update({
    path: '/registration/steps/step4_course',
    getParentRoute: () => rootRoute,
  } as any)

const RegistrationStepsStep3confirmationRoute =
  RegistrationStepsStep3confirmationImport.update({
    path: '/registration/steps/step3_confirmation',
    getParentRoute: () => rootRoute,
  } as any)

const RegistrationStepsStep2imgRoute = RegistrationStepsStep2imgImport.update({
  path: '/registration/steps/step2_img',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationStepsStep1profileRoute =
  RegistrationStepsStep1profileImport.update({
    path: '/registration/steps/step1_profile',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/editCourses': {
      id: '/editCourses'
      path: '/editCourses'
      fullPath: '/editCourses'
      preLoaderRoute: typeof EditCoursesImport
      parentRoute: typeof rootRoute
    }
    '/editProfile': {
      id: '/editProfile'
      path: '/editProfile'
      fullPath: '/editProfile'
      preLoaderRoute: typeof EditProfileImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/root': {
      id: '/root'
      path: '/root'
      fullPath: '/root'
      preLoaderRoute: typeof RootImport
      parentRoute: typeof rootRoute
    }
    '/registration/common': {
      id: '/registration/common'
      path: '/registration/common'
      fullPath: '/registration/common'
      preLoaderRoute: typeof RegistrationCommonImport
      parentRoute: typeof rootRoute
    }
    '/registration/data': {
      id: '/registration/data'
      path: '/registration/data'
      fullPath: '/registration/data'
      preLoaderRoute: typeof RegistrationDataImport
      parentRoute: typeof rootRoute
    }
    '/registration/functions': {
      id: '/registration/functions'
      path: '/registration/functions'
      fullPath: '/registration/functions'
      preLoaderRoute: typeof RegistrationFunctionsImport
      parentRoute: typeof rootRoute
    }
    '/settings/aboutUs': {
      id: '/settings/aboutUs'
      path: '/settings/aboutUs'
      fullPath: '/settings/aboutUs'
      preLoaderRoute: typeof SettingsAboutUsImport
      parentRoute: typeof rootRoute
    }
    '/settings/contact': {
      id: '/settings/contact'
      path: '/settings/contact'
      fullPath: '/settings/contact'
      preLoaderRoute: typeof SettingsContactImport
      parentRoute: typeof rootRoute
    }
    '/settings/disclaimer': {
      id: '/settings/disclaimer'
      path: '/settings/disclaimer'
      fullPath: '/settings/disclaimer'
      preLoaderRoute: typeof SettingsDisclaimerImport
      parentRoute: typeof rootRoute
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileImport
      parentRoute: typeof rootRoute
    }
    '/settings/settings': {
      id: '/settings/settings'
      path: '/settings/settings'
      fullPath: '/settings/settings'
      preLoaderRoute: typeof SettingsSettingsImport
      parentRoute: typeof rootRoute
    }
    '/registration/': {
      id: '/registration/'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof RegistrationIndexImport
      parentRoute: typeof rootRoute
    }
    '/registration/steps/step1_profile': {
      id: '/registration/steps/step1_profile'
      path: '/registration/steps/step1_profile'
      fullPath: '/registration/steps/step1_profile'
      preLoaderRoute: typeof RegistrationStepsStep1profileImport
      parentRoute: typeof rootRoute
    }
    '/registration/steps/step2_img': {
      id: '/registration/steps/step2_img'
      path: '/registration/steps/step2_img'
      fullPath: '/registration/steps/step2_img'
      preLoaderRoute: typeof RegistrationStepsStep2imgImport
      parentRoute: typeof rootRoute
    }
    '/registration/steps/step3_confirmation': {
      id: '/registration/steps/step3_confirmation'
      path: '/registration/steps/step3_confirmation'
      fullPath: '/registration/steps/step3_confirmation'
      preLoaderRoute: typeof RegistrationStepsStep3confirmationImport
      parentRoute: typeof rootRoute
    }
    '/registration/steps/step4_course': {
      id: '/registration/steps/step4_course'
      path: '/registration/steps/step4_course'
      fullPath: '/registration/steps/step4_course'
      preLoaderRoute: typeof RegistrationStepsStep4courseImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/chat': typeof ChatRoute
  '/editCourses': typeof EditCoursesRoute
  '/editProfile': typeof EditProfileRoute
  '/friends': typeof FriendsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/root': typeof RootRoute
  '/registration/common': typeof RegistrationCommonRoute
  '/registration/data': typeof RegistrationDataRoute
  '/registration/functions': typeof RegistrationFunctionsRoute
  '/settings/aboutUs': typeof SettingsAboutUsRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/disclaimer': typeof SettingsDisclaimerRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/settings': typeof SettingsSettingsRoute
  '/registration': typeof RegistrationIndexRoute
  '/registration/steps/step1_profile': typeof RegistrationStepsStep1profileRoute
  '/registration/steps/step2_img': typeof RegistrationStepsStep2imgRoute
  '/registration/steps/step3_confirmation': typeof RegistrationStepsStep3confirmationRoute
  '/registration/steps/step4_course': typeof RegistrationStepsStep4courseRoute
}

export interface FileRoutesByTo {
  '/chat': typeof ChatRoute
  '/editCourses': typeof EditCoursesRoute
  '/editProfile': typeof EditProfileRoute
  '/friends': typeof FriendsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/root': typeof RootRoute
  '/registration/common': typeof RegistrationCommonRoute
  '/registration/data': typeof RegistrationDataRoute
  '/registration/functions': typeof RegistrationFunctionsRoute
  '/settings/aboutUs': typeof SettingsAboutUsRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/disclaimer': typeof SettingsDisclaimerRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/settings': typeof SettingsSettingsRoute
  '/registration': typeof RegistrationIndexRoute
  '/registration/steps/step1_profile': typeof RegistrationStepsStep1profileRoute
  '/registration/steps/step2_img': typeof RegistrationStepsStep2imgRoute
  '/registration/steps/step3_confirmation': typeof RegistrationStepsStep3confirmationRoute
  '/registration/steps/step4_course': typeof RegistrationStepsStep4courseRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/chat': typeof ChatRoute
  '/editCourses': typeof EditCoursesRoute
  '/editProfile': typeof EditProfileRoute
  '/friends': typeof FriendsRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/root': typeof RootRoute
  '/registration/common': typeof RegistrationCommonRoute
  '/registration/data': typeof RegistrationDataRoute
  '/registration/functions': typeof RegistrationFunctionsRoute
  '/settings/aboutUs': typeof SettingsAboutUsRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/disclaimer': typeof SettingsDisclaimerRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/settings': typeof SettingsSettingsRoute
  '/registration/': typeof RegistrationIndexRoute
  '/registration/steps/step1_profile': typeof RegistrationStepsStep1profileRoute
  '/registration/steps/step2_img': typeof RegistrationStepsStep2imgRoute
  '/registration/steps/step3_confirmation': typeof RegistrationStepsStep3confirmationRoute
  '/registration/steps/step4_course': typeof RegistrationStepsStep4courseRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/chat'
    | '/editCourses'
    | '/editProfile'
    | '/friends'
    | '/home'
    | '/login'
    | '/root'
    | '/registration/common'
    | '/registration/data'
    | '/registration/functions'
    | '/settings/aboutUs'
    | '/settings/contact'
    | '/settings/disclaimer'
    | '/settings/profile'
    | '/settings/settings'
    | '/registration'
    | '/registration/steps/step1_profile'
    | '/registration/steps/step2_img'
    | '/registration/steps/step3_confirmation'
    | '/registration/steps/step4_course'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/chat'
    | '/editCourses'
    | '/editProfile'
    | '/friends'
    | '/home'
    | '/login'
    | '/root'
    | '/registration/common'
    | '/registration/data'
    | '/registration/functions'
    | '/settings/aboutUs'
    | '/settings/contact'
    | '/settings/disclaimer'
    | '/settings/profile'
    | '/settings/settings'
    | '/registration'
    | '/registration/steps/step1_profile'
    | '/registration/steps/step2_img'
    | '/registration/steps/step3_confirmation'
    | '/registration/steps/step4_course'
  id:
    | '__root__'
    | '/chat'
    | '/editCourses'
    | '/editProfile'
    | '/friends'
    | '/home'
    | '/login'
    | '/root'
    | '/registration/common'
    | '/registration/data'
    | '/registration/functions'
    | '/settings/aboutUs'
    | '/settings/contact'
    | '/settings/disclaimer'
    | '/settings/profile'
    | '/settings/settings'
    | '/registration/'
    | '/registration/steps/step1_profile'
    | '/registration/steps/step2_img'
    | '/registration/steps/step3_confirmation'
    | '/registration/steps/step4_course'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ChatRoute: typeof ChatRoute
  EditCoursesRoute: typeof EditCoursesRoute
  EditProfileRoute: typeof EditProfileRoute
  FriendsRoute: typeof FriendsRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  RootRoute: typeof RootRoute
  RegistrationCommonRoute: typeof RegistrationCommonRoute
  RegistrationDataRoute: typeof RegistrationDataRoute
  RegistrationFunctionsRoute: typeof RegistrationFunctionsRoute
  SettingsAboutUsRoute: typeof SettingsAboutUsRoute
  SettingsContactRoute: typeof SettingsContactRoute
  SettingsDisclaimerRoute: typeof SettingsDisclaimerRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  SettingsSettingsRoute: typeof SettingsSettingsRoute
  RegistrationIndexRoute: typeof RegistrationIndexRoute
  RegistrationStepsStep1profileRoute: typeof RegistrationStepsStep1profileRoute
  RegistrationStepsStep2imgRoute: typeof RegistrationStepsStep2imgRoute
  RegistrationStepsStep3confirmationRoute: typeof RegistrationStepsStep3confirmationRoute
  RegistrationStepsStep4courseRoute: typeof RegistrationStepsStep4courseRoute
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRoute,
  EditCoursesRoute: EditCoursesRoute,
  EditProfileRoute: EditProfileRoute,
  FriendsRoute: FriendsRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  RootRoute: RootRoute,
  RegistrationCommonRoute: RegistrationCommonRoute,
  RegistrationDataRoute: RegistrationDataRoute,
  RegistrationFunctionsRoute: RegistrationFunctionsRoute,
  SettingsAboutUsRoute: SettingsAboutUsRoute,
  SettingsContactRoute: SettingsContactRoute,
  SettingsDisclaimerRoute: SettingsDisclaimerRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  SettingsSettingsRoute: SettingsSettingsRoute,
  RegistrationIndexRoute: RegistrationIndexRoute,
  RegistrationStepsStep1profileRoute: RegistrationStepsStep1profileRoute,
  RegistrationStepsStep2imgRoute: RegistrationStepsStep2imgRoute,
  RegistrationStepsStep3confirmationRoute:
    RegistrationStepsStep3confirmationRoute,
  RegistrationStepsStep4courseRoute: RegistrationStepsStep4courseRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/chat",
        "/editCourses",
        "/editProfile",
        "/friends",
        "/home",
        "/login",
        "/root",
        "/registration/common",
        "/registration/data",
        "/registration/functions",
        "/settings/aboutUs",
        "/settings/contact",
        "/settings/disclaimer",
        "/settings/profile",
        "/settings/settings",
        "/registration/",
        "/registration/steps/step1_profile",
        "/registration/steps/step2_img",
        "/registration/steps/step3_confirmation",
        "/registration/steps/step4_course"
      ]
    },
    "/chat": {
      "filePath": "chat.tsx"
    },
    "/editCourses": {
      "filePath": "editCourses.tsx"
    },
    "/editProfile": {
      "filePath": "editProfile.tsx"
    },
    "/friends": {
      "filePath": "friends.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/root": {
      "filePath": "root.tsx"
    },
    "/registration/common": {
      "filePath": "registration/common.tsx"
    },
    "/registration/data": {
      "filePath": "registration/data.ts"
    },
    "/registration/functions": {
      "filePath": "registration/functions.ts"
    },
    "/settings/aboutUs": {
      "filePath": "settings/aboutUs.tsx"
    },
    "/settings/contact": {
      "filePath": "settings/contact.tsx"
    },
    "/settings/disclaimer": {
      "filePath": "settings/disclaimer.tsx"
    },
    "/settings/profile": {
      "filePath": "settings/profile.tsx"
    },
    "/settings/settings": {
      "filePath": "settings/settings.tsx"
    },
    "/registration/": {
      "filePath": "registration/index.tsx"
    },
    "/registration/steps/step1_profile": {
      "filePath": "registration/steps/step1_profile.tsx"
    },
    "/registration/steps/step2_img": {
      "filePath": "registration/steps/step2_img.tsx"
    },
    "/registration/steps/step3_confirmation": {
      "filePath": "registration/steps/step3_confirmation.tsx"
    },
    "/registration/steps/step4_course": {
      "filePath": "registration/steps/step4_course.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
